"""
    This script finds inactive IOCs. It gets a list of all common IOCs 
    and checks it against IOCs that are currently deployed in the IOC 
    Manager to find the ones that are no longer active.

    These are the currently inactive IOCs as of March 2025. This list was 
    generated by this script and also updated manually:

    ['4jawSlit', 'Alcatel-turbo', 'CHB-detector', 'DS335', 'MicosHP140', 
    'NewportAgilis', 'PS350', 'RGAs', 'TE-tech', 'acqiris', 'agilent5322.backup', 
    'arlyn-upscale', 'authTest', 'autoEncoder', 'beckhoffIO', 'bhc-solenoid', 
    'bldMonitor', 'bme280', 'caen', 'cam-ipimb', 'clCam', 'cole-parmer', 
    'coolershaker', 'cr_test', 'evrTest', 'gas-regulator', 'generic_snmp', 
    'generic_streamdevice', 'geoBrick', 'inficonMPH', 'innovasonic203', 
    'keysight53200', 'lauda_VC2000', 'lusiTest', 'meanwell', 'mirror_dx', 
    'mmcCommunity', 'moveTogether', 'mse1650', 'newall-SHG-A2', 'orcaApp', 
    'pfeiffer', 'pgpEdt', 'pi-e517', 'pmcMotion', 'poe-inj', 'pyreos', 'rigolDS', 
    'rotSamplePlane', 'scripter', 'slowCam', 'softTest', 'sr570', 'srg3', 
    'srs-sim-cpsw', 'tdkLambdaGen', 'topas', 'tucsenCam', 'tuttifrutti', 
    'usbFLIRCam', 'vatPM5', 'xip_pp', 'ztec_scope']
"""

import csv


def find_inactive_iocs():

    common_iocs = []
    config_files = []
    config_file = []
    inactive_iocs = []

   # active_iocs.txt is a list of iocs that are currently deployed in IOC Manager
    with open('active_iocs.txt', 'r') as infile:
        reader = csv.reader(infile)
        deployed_in_ioc_manager = [line for line in reader]

    for row in deployed_in_ioc_manager:
        config_files.append(row[len(row)-1])

    config_files = set(config_files)

    # common_iocs.txt is a list of all common IOCs in pcdshub (except for the top 15)
    with open('common_iocs.txt', 'r') as infile:
        common_iocs = [line.strip() for line in infile.readlines()]
        inactive_iocs = common_iocs

    for filepath in config_files:
        filepath = filepath.strip()

        try:
            with open(filepath, 'r') as file:
                for line in file:
                    config_file.append(line.strip())
        except FileNotFoundError:
            print(f"Error: File not found at {file_path}")

        for ioc in common_iocs:
            for line in config_file:
                if (ioc in line) or (ioc.lower() in line):
                    if ioc in inactive_iocs:
                        inactive_iocs.remove(ioc)

    return inactive_iocs


print(find_inactive_iocs())
