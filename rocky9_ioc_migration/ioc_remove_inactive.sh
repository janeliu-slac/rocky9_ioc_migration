#!/bin/bash

# Remove all inactive IOCs.

# This list of inactive IOCs was generated by find_inactive_iocs.py and then manually updated.
inactive_list=("4jawSlit" "Alcatel-turbo" "CHB-detector" "DS335" "MicosHP140" "NewportAgilis" "PS350" "RGAs" "TE-tech" "acqiris" "agilent5322.backup" "arlyn-upscale" "authTest" "autoEncoder" "beckhoffIO" "bhc-solenoid" "bldMonitor" "bme280" "caen" "cam-ipimb" "clCam" "cole-parmer" "coolershaker" "cr_test" "crackmon" "evrTest" "gas-regulator" "generic_snmp" "generic_streamdevice" "geoBrick" "inficonMPH" "innovasonic203" "keysight53200" "local_gateway" "lusiTest" "meanwell" "mirror_dx" "mmcCommunity" "moveTogether" "mse1650" "newall-SHG-A2" "orcaApp" "pfeiffer" "pgpEdt" "pi-e517" "pmcMotion" "poe-inj" "pyreos" "rigolDS" "rotSamplePlane" "scripter" "shimadzu" "slowCam" "softTest" "sr570" "srg3" "srs-sim-cpsw" "tdkLambdaGen" "thorlabs" "topas" "tricam" "tucsenCam" "tuttifrutti" "usbFLIRCam" "vatPM5" "xip_pp" "ztec_scope")

# Go up into /iocs folder
cd ../..

for dir in */; do
    if [ -d "$dir" ]; then
        (
            # check if this IOC is inactive and remove it (shimadzu-lc20 is active. If it's removed, must add it back.
            found=false
            for item in "${inactive_list[@]}"; do
                if [[ "$dir" == *"$item"* ]]; then
                    found=true
                    break
                fi
            done
            if $found; then
                rm -rf "$dir"
                printf "$dir has been removed.\n"
            fi
        )
    fi
done
